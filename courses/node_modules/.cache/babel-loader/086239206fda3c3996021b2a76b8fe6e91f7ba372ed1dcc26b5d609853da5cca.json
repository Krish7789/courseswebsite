{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectPEP\\\\courses\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\n\n// Create a Context to share cart data with all components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\n\n// This will wrap our app and provide cart data\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]); // to store added courses\n\n  // function to add a course to the cart\n  const addToCart = course => {\n    setCartItems(prev => {\n      // add only if not already added\n      if (!prev.find(item => item.id === course.id)) {\n        return [...prev, course];\n      }\n      return prev;\n    });\n  };\n\n  // function to remove a course from the cart\n  const removeFromCart = id => {\n    setCartItems(prev => prev.filter(item => item.id !== id));\n  };\n\n  // make cartItems, addToCart, and removeFromCart available to all children components\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","addToCart","course","prev","find","item","id","removeFromCart","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ProjectPEP/courses/src/contexts/CartContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\n// Create a Context to share cart data with all components\r\nexport const CartContext = createContext();\r\n\r\n// This will wrap our app and provide cart data\r\nexport const CartProvider = ({ children }) => {\r\n    const [cartItems, setCartItems] = useState([]); // to store added courses\r\n\r\n    // function to add a course to the cart\r\n    const addToCart = (course) => {\r\n        setCartItems(prev => {\r\n            // add only if not already added\r\n            if (!prev.find(item => item.id === course.id)) {\r\n                return [...prev, course];\r\n            }\r\n            return prev;\r\n        });\r\n    };\r\n\r\n    // function to remove a course from the cart\r\n    const removeFromCart = (id) => {\r\n        setCartItems(prev => prev.filter(item => item.id !== id));\r\n    };\r\n\r\n    // make cartItems, addToCart, and removeFromCart available to all children components\r\n    return (\r\n        <CartContext.Provider value={{ cartItems, addToCart, removeFromCart }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEhD;EACA,MAAMS,SAAS,GAAIC,MAAM,IAAK;IAC1BF,YAAY,CAACG,IAAI,IAAI;MACjB;MACA,IAAI,CAACA,IAAI,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACI,EAAE,CAAC,EAAE;QAC3C,OAAO,CAAC,GAAGH,IAAI,EAAED,MAAM,CAAC;MAC5B;MACA,OAAOC,IAAI;IACf,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMI,cAAc,GAAID,EAAE,IAAK;IAC3BN,YAAY,CAACG,IAAI,IAAIA,IAAI,CAACK,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC7D,CAAC;;EAED;EACA,oBACIZ,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,SAAS;MAAEE,SAAS;MAAEM;IAAe,CAAE;IAAAV,QAAA,EACjEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAChB,EAAA,CAzBWF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}