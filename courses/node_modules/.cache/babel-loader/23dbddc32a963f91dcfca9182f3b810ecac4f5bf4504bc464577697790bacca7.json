{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectPEP\\\\courses\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { apiUrl, filterData } from \"./data\";\nimport Filter from \"./components/Filter\";\nimport Cards from \"./components/Cards\";\nimport { toast } from \"react-toastify\";\nimport Spinner from \"./components/Spinner\";\nimport CourseDetail from \"./components/CourseDetail\";\nimport { Routes, Route } from \"react-router-dom\"; // to use routing for course detail page\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [courses, setCourses] = useState(null); // to store fetched courses data\n  const [loading, setLoading] = useState(true); // to handle loading state\n  const [category, setCategory] = useState(filterData[0].title); // \"All\" value (initial value)\n\n  // function to fetch API data\n  async function fetchData() {\n    setLoading(true);\n    try {\n      let res = await fetch(apiUrl); // fetching from API\n      let output = await res.json(); // converting api data into json format\n      // save data into a variable\n      setCourses(output.data);\n    } catch (error) {\n      toast.error(\"Something went wrong\"); // showing toast error if API fails\n    }\n    setLoading(false); // stop loading after fetching\n  }\n\n  // call fetchData only once when the component mounts\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"maxdiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navapp\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter\",\n            children: /*#__PURE__*/_jsxDEV(Filter, {\n              filterData: filterData // using props to pass filter data\n              ,\n              category: category,\n              setCategory: setCategory // sending category state to filter.js\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this) // show spinner if loading\n            : /*#__PURE__*/_jsxDEV(Cards, {\n              courses: courses,\n              category: category // sending category prop for filtering\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/course/:i\" // dynamic route for individual course\n        ,\n        element: /*#__PURE__*/_jsxDEV(CourseDetail, {\n          courses: courses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 20\n        }, this) // pass all courses to find the selected course\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ngbPBYJeNkg7QoWkOQ0nJBHPvTg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Navbar","apiUrl","filterData","Filter","Cards","toast","Spinner","CourseDetail","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","courses","setCourses","loading","setLoading","category","setCategory","title","fetchData","res","fetch","output","json","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["D:/ProjectPEP/courses/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { apiUrl, filterData } from \"./data\";\nimport Filter from \"./components/Filter\";\nimport Cards from \"./components/Cards\";\nimport { toast } from \"react-toastify\";\nimport Spinner from \"./components/Spinner\";\nimport CourseDetail from \"./components/CourseDetail\";\nimport { Routes, Route } from \"react-router-dom\"; // to use routing for course detail page\n\nconst App = () => {\n  const [courses, setCourses] = useState(null); // to store fetched courses data\n  const [loading, setLoading] = useState(true); // to handle loading state\n  const [category, setCategory] = useState(filterData[0].title); // \"All\" value (initial value)\n\n  // function to fetch API data\n  async function fetchData() {\n    setLoading(true);\n    try {\n      let res = await fetch(apiUrl); // fetching from API\n      let output = await res.json(); // converting api data into json format\n      // save data into a variable\n      setCourses(output.data);\n    } catch (error) {\n      toast.error(\"Something went wrong\"); // showing toast error if API fails\n    }\n    setLoading(false); // stop loading after fetching\n  }\n\n  // call fetchData only once when the component mounts\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"maxdiv\">\n      <div className=\"navapp\">\n        <Navbar /> {/* navigation bar */}\n      </div>\n      <Routes> {/* routes for handling navigation */}\n        <Route\n          path=\"/\"\n          element={\n            <>\n              <div className=\"filter\">\n                <Filter\n                  filterData={filterData} // using props to pass filter data\n                  category={category}\n                  setCategory={setCategory} // sending category state to filter.js\n                />\n              </div>\n              <div>\n                {loading ? (\n                  <Spinner /> // show spinner if loading\n                ) : (\n                  <Cards\n                    courses={courses}\n                    category={category} // sending category prop for filtering\n                  />\n                )}\n              </div>\n            </>\n          }\n        />\n        <Route\n          path=\"/course/:i\" // dynamic route for individual course\n          element={<CourseDetail courses={courses} />} // pass all courses to find the selected course\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,MAAM,EAAEC,UAAU,QAAQ,QAAQ;AAC3C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAACG,UAAU,CAAC,CAAC,CAAC,CAACoB,KAAK,CAAC,CAAC,CAAC;;EAE/D;EACA,eAAeC,SAASA,CAAA,EAAG;IACzBJ,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,IAAIK,GAAG,GAAG,MAAMC,KAAK,CAACxB,MAAM,CAAC,CAAC,CAAC;MAC/B,IAAIyB,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;MAC/B;MACAV,UAAU,CAACS,MAAM,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdxB,KAAK,CAACwB,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC;IACvC;IACAV,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;EACrB;;EAEA;EACArB,SAAS,CAAC,MAAM;IACdyB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKmB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBpB,OAAA;MAAKmB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBpB,OAAA,CAACX,MAAM;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACNxB,OAAA,CAACH,MAAM;MAAAuB,QAAA,GAAC,GAAC,eACPpB,OAAA,CAACF,KAAK;QACJ2B,IAAI,EAAC,GAAG;QACRC,OAAO,eACL1B,OAAA,CAAAE,SAAA;UAAAkB,QAAA,gBACEpB,OAAA;YAAKmB,SAAS,EAAC,QAAQ;YAAAC,QAAA,eACrBpB,OAAA,CAACR,MAAM;cACLD,UAAU,EAAEA,UAAW,CAAC;cAAA;cACxBkB,QAAQ,EAAEA,QAAS;cACnBC,WAAW,EAAEA,WAAY,CAAC;YAAA;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNxB,OAAA;YAAAoB,QAAA,EACGb,OAAO,gBACNP,OAAA,CAACL,OAAO;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,CAAC;YAAA,eAEZxB,OAAA,CAACP,KAAK;cACJY,OAAO,EAAEA,OAAQ;cACjBI,QAAQ,EAAEA,QAAS,CAAC;YAAA;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA,eACN;MACH;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACFxB,OAAA,CAACF,KAAK;QACJ2B,IAAI,EAAC,YAAY,CAAC;QAAA;QAClBC,OAAO,eAAE1B,OAAA,CAACJ,YAAY;UAACS,OAAO,EAAEA;QAAQ;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACpB,EAAA,CA7DID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA+DT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}