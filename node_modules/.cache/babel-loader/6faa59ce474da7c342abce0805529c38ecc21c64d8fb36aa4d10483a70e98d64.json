{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectPEP\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { apiUrl, filterData } from \"./data\";\nimport Filter from \"./components/Filter\";\nimport Cards from \"./components/Cards\";\nimport { toast } from \"react-toastify\";\nimport Spinner from \"./components/Spinner\";\nimport CourseDetail from \"./components/CourseDetail\";\nimport CartPage from \"./components/CartPage\"; // import CartPage for /cart route\nimport { Routes, Route } from \"react-router-dom\"; // import routing components\n\n// import ThemeProvider for dark mode\nimport { ThemeProvider } from \"./contexts/ThemeContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [courses, setCourses] = useState(null); // stores courses from API\n  const [loading, setLoading] = useState(true); // loading state\n  const [category, setCategory] = useState(filterData[0].title); // initial category value (\"All\")\n\n  // fetch data from API\n  async function fetchData() {\n    setLoading(true);\n    try {\n      let res = await fetch(apiUrl);\n      let output = await res.json(); // convert API data into JSON\n      setCourses(output.data); // save API data into state\n    } catch (error) {\n      toast.error(\"Something went wrong\");\n    }\n    setLoading(false);\n  }\n\n  // fetch data when app loads\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"maxdiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navapp\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter\",\n              children: /*#__PURE__*/_jsxDEV(Filter, {\n                filterData: filterData // using props to pass filter buttons data\n                ,\n                category: category,\n                setCategory: setCategory // for updating selected category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this) // show spinner while loading\n              : /*#__PURE__*/_jsxDEV(Cards, {\n                courses: courses,\n                category: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this) // show cards after loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/course/:id\",\n          element: /*#__PURE__*/_jsxDEV(CourseDetail, {\n            courses: courses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cart\",\n          element: /*#__PURE__*/_jsxDEV(CartPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ngbPBYJeNkg7QoWkOQ0nJBHPvTg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Navbar","apiUrl","filterData","Filter","Cards","toast","Spinner","CourseDetail","CartPage","Routes","Route","ThemeProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","courses","setCourses","loading","setLoading","category","setCategory","title","fetchData","res","fetch","output","json","data","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["D:/ProjectPEP/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { apiUrl, filterData } from \"./data\";\nimport Filter from \"./components/Filter\";\nimport Cards from \"./components/Cards\";\nimport { toast } from \"react-toastify\";\nimport Spinner from \"./components/Spinner\";\nimport CourseDetail from \"./components/CourseDetail\";\nimport CartPage from \"./components/CartPage\"; // import CartPage for /cart route\nimport { Routes, Route } from \"react-router-dom\"; // import routing components\n\n// import ThemeProvider for dark mode\nimport { ThemeProvider } from \"./contexts/ThemeContext\";\n\nconst App = () => {\n  const [courses, setCourses] = useState(null); // stores courses from API\n  const [loading, setLoading] = useState(true); // loading state\n  const [category, setCategory] = useState(filterData[0].title); // initial category value (\"All\")\n\n  // fetch data from API\n  async function fetchData() {\n    setLoading(true);\n    try {\n      let res = await fetch(apiUrl);\n      let output = await res.json(); // convert API data into JSON\n      setCourses(output.data); // save API data into state\n    } catch (error) {\n      toast.error(\"Something went wrong\");\n    }\n    setLoading(false);\n  }\n\n  // fetch data when app loads\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <ThemeProvider>\n      <div className=\"maxdiv\">\n        {/* Navbar */}\n        <div className=\"navapp\">\n          <Navbar />\n        </div>\n\n        {/* React Router Routes */}\n        <Routes>\n          {/* Home route */}\n          <Route\n            path=\"/\"\n            element={\n              <>\n                {/* Filter component with props */}\n                <div className=\"filter\">\n                  <Filter\n                    filterData={filterData} // using props to pass filter buttons data\n                    category={category}\n                    setCategory={setCategory} // for updating selected category\n                  />\n                </div>\n\n                {/* Main content */}\n                <div>\n                  {loading ? (\n                    <Spinner /> // show spinner while loading\n                  ) : (\n                    <Cards courses={courses} category={category} /> // show cards after loading\n                  )}\n                </div>\n              </>\n            }\n          />\n\n          {/* Course Detail Page */}\n          <Route\n            path=\"/course/:id\"\n            element={<CourseDetail courses={courses} />}\n          />\n\n          {/* Cart Page */}\n          <Route\n            path=\"/cart\"\n            element={<CartPage />}\n          />\n        </Routes>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}