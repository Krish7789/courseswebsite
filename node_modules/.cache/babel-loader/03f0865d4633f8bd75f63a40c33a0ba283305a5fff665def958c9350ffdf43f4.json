{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProjectPEP\\\\src\\\\components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"./Card\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = props => {\n  _s();\n  let courses = props.courses;\n  let category = props.category;\n\n  // This loads likes from localStorage on first load\n  const [likedCourses, setLikedCourses] = useState(() => {\n    const storedLikes = localStorage.getItem(\"likedCourses\");\n    return storedLikes ? JSON.parse(storedLikes) : [];\n  });\n\n  // This saves likes automatically to localStorage whenever they change.\n  useEffect(() => {\n    localStorage.setItem(\"likedCourses\", JSON.stringify(likedCourses));\n  }, [likedCourses]);\n\n  // this function will help me to get all the data of all the courses in a single array\n  // returns you a list of all courses received from the api response\n  function getCourses() {\n    if (category === \"All\") {\n      let allCourses = [];\n      // currently data in the array is in the form of key-value pair\n      Object.values(courses).forEach(array => {\n        array.forEach(courseData => {\n          allCourses.push(courseData);\n        });\n      });\n      return allCourses;\n    } else {\n      // here i will pass only specific data array\n      return courses[category];\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: getCourses().map(course => /*#__PURE__*/_jsxDEV(Card, {\n      course: course,\n      likedCourses: likedCourses,\n      setLikedCourses: setLikedCourses\n    }, course.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) // making card for each course\n    )\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"Q/0EZxXxpKPupmR8qrlnZp3cQ+U=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","Card","useEffect","jsxDEV","_jsxDEV","Cards","props","_s","courses","category","likedCourses","setLikedCourses","storedLikes","localStorage","getItem","JSON","parse","setItem","stringify","getCourses","allCourses","Object","values","forEach","array","courseData","push","className","children","map","course","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ProjectPEP/src/components/Cards.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Cards = (props) => {\r\n  let courses = props.courses;\r\n  let category = props.category;\r\n\r\n  // This loads likes from localStorage on first load\r\nconst [likedCourses, setLikedCourses] = useState(() => {\r\n    const storedLikes = localStorage.getItem(\"likedCourses\");\r\n    return storedLikes ? JSON.parse(storedLikes) : [];\r\n});\r\n\r\n\r\n// This saves likes automatically to localStorage whenever they change.\r\nuseEffect(() => {\r\n    localStorage.setItem(\"likedCourses\", JSON.stringify(likedCourses));\r\n}, [likedCourses]);\r\n\r\n\r\n  // this function will help me to get all the data of all the courses in a single array\r\n  // returns you a list of all courses received from the api response\r\n  function getCourses() {\r\n    if (category === \"All\") {\r\n      let allCourses = [];\r\n      // currently data in the array is in the form of key-value pair\r\n      Object.values(courses).forEach((array) => {\r\n        array.forEach((courseData) => {\r\n          allCourses.push(courseData);\r\n        });\r\n      });\r\n      return allCourses;\r\n    } else {\r\n      // here i will pass only specific data array\r\n      return courses[category];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"cards\">\r\n      {getCourses().map((course) => (\r\n        <Card\r\n          key={course.id}\r\n          course={course}\r\n          likedCourses={likedCourses}\r\n          setLikedCourses={setLikedCourses}\r\n        /> // making card for each course\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,IAAIC,OAAO,GAAGF,KAAK,CAACE,OAAO;EAC3B,IAAIC,QAAQ,GAAGH,KAAK,CAACG,QAAQ;;EAE7B;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACnD,MAAMY,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACxD,OAAOF,WAAW,GAAGG,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,GAAG,EAAE;EACrD,CAAC,CAAC;;EAGF;EACAV,SAAS,CAAC,MAAM;IACZW,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEF,IAAI,CAACG,SAAS,CAACR,YAAY,CAAC,CAAC;EACtE,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAGhB;EACA;EACA,SAASS,UAAUA,CAAA,EAAG;IACpB,IAAIV,QAAQ,KAAK,KAAK,EAAE;MACtB,IAAIW,UAAU,GAAG,EAAE;MACnB;MACAC,MAAM,CAACC,MAAM,CAACd,OAAO,CAAC,CAACe,OAAO,CAAEC,KAAK,IAAK;QACxCA,KAAK,CAACD,OAAO,CAAEE,UAAU,IAAK;UAC5BL,UAAU,CAACM,IAAI,CAACD,UAAU,CAAC;QAC7B,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAOL,UAAU;IACnB,CAAC,MAAM;MACL;MACA,OAAOZ,OAAO,CAACC,QAAQ,CAAC;IAC1B;EACF;EAEA,oBACEL,OAAA;IAAKuB,SAAS,EAAC,OAAO;IAAAC,QAAA,EACnBT,UAAU,CAAC,CAAC,CAACU,GAAG,CAAEC,MAAM,iBACvB1B,OAAA,CAACH,IAAI;MAEH6B,MAAM,EAAEA,MAAO;MACfpB,YAAY,EAAEA,YAAa;MAC3BC,eAAe,EAAEA;IAAgB,GAH5BmB,MAAM,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIf,CAAC,CAAC;IACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA/CIF,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAiDX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}